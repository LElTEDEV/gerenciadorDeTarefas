
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

model User {

  id String @id @default(uuid())
  name String
  email String @unique
  password String
  role Role @default(user)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  team_members TeamMember[]
  tasks Task[]
  tasks_history TaskHistory[]

  @@map("users")
}

model Team {

  id String @id @default(uuid())
  name String
  description String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  team_members TeamMember[]
  tasks Task[]

  @@map("teams")
}

model TeamMember {

  id String @id @default(uuid())
  created_at DateTime @default(now())

  user User @relation(fields: [user_id], references: [id])
  user_id String

  team Team @relation(fields: [team_id], references: [id])
  team_id String

  @@map("team_members")
}

enum Status {
  pending
  in_progress
  completed
}

enum Priority {
  low
  medium
  high
}

model Task {

  id String @id @default(uuid())
  title String
  description String?
  status Status @default(pending)
  priority Priority @default(low)

  user User @relation(fields: [assigned_to], references: [id])
  assigned_to String

  team Team @relation(fields: [team_id], references: [id])
  team_id String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tasks_history TaskHistory[]

  @@map("tasks")
}

model TaskHistory {

  id String @id @default(uuid())
  old_status Status
  new_status Status
  changed_at DateTime @default(now())

  task Task @relation(fields: [task_id], references: [id])
  task_id String

  user User @relation(fields: [changed_by], references: [id])
  changed_by String
  
  @@map("tasks_history")
}